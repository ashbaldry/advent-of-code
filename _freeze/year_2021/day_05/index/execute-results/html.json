{
  "hash": "acb4ccb3ca0c3ee65d6294a265f72507",
  "result": {
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    code-tools: true\n    code-block-bg: true\n    code-block-border-left: \"#AB63BD\"\n---\n\n\n## Set-Up\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninput <- readLines(\"input.txt\")\nstr(input)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n chr [1:500] \"593,10 -> 593,98\" \"777,236 -> 964,236\" \"650,575 -> 476,575\" ...\n```\n:::\n:::\n\n\n### Helper Function\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetNDuplicatedPoints <- function(lines, include_diagonals = FALSE) {\n  all_positions <- lapply(lines, \\(x) {\n    # x1, y1, x2, y2\n    line <- as.integer(strsplit(x, \",| -> \")[[1]])\n    if (line[1] == line[3] || line[2] == line[4] || include_diagonals) {\n      data.frame(x = seq(line[1], line[3]), y = seq(line[2], line[4]))\n    } else {\n      data.frame(x = integer(0), y = integer(0))\n    }\n  })\n\n  all_positions_combined <- do.call(rbind, all_positions)\n  nrow(unique(all_positions_combined[duplicated(all_positions_combined), ]))\n}\n```\n:::\n\n\n## Part 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetNDuplicatedPoints(input)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 7468\n```\n:::\n:::\n\n\n## Part 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetNDuplicatedPoints(input, include_diagonals = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 22364\n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}