{
  "hash": "3234547fbfa0c49b97d4770913eada9f",
  "result": {
    "markdown": "---\ntitle: \"2021 - Day 21\"\nformat:\n  html:\n    code-fold: show\n    code-tools: true\n    code-block-bg: true\n    code-block-border-left: \"#AB63BD\"\n---\n\n\n## Set-Up\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstart_positions <- read.delim(\n  \"input.txt\", header = FALSE, sep = \" \",\n  col.names = c(\"x\", \"player\", \"y\", \"z\", \"start\")\n)\nstr(start_positions)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t2 obs. of  5 variables:\n $ x     : chr  \"Player\" \"Player\"\n $ player: int  1 2\n $ y     : chr  \"starting\" \"starting\"\n $ z     : chr  \"position:\" \"position:\"\n $ start : int  8 2\n```\n:::\n:::\n\n\n## Part 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\naddScore <- function(p1, p2, s1 = 0, s2 = 0, turn = 1, i = 1, cnt = 3) {\n  code <- \"p1 <- (p1 + sum(i:(i + 2) %% 10)) %% 10; if (p1 == 0) p1 <- 10; s1 <- s1 + p1\"\n  if (turn == 2) code <- gsub(\"(p|s)1\", \"\\\\12\", code)\n  eval(parse(text = code))\n\n  if (s1 >= 1000 || s2 >= 1000) {\n    c(s1, s2)[c(s1, s2) < 1000] * cnt\n  } else {\n    addScore(p1, p2, s1, s2, 3 - turn, (i + 3) %/% 101 + (i + 3) %% 101, cnt + 3)\n  }\n}\n\naddScore(start_positions$start[1], start_positions$start[2])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 513936\n```\n:::\n:::\n\n\n## Part 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot_scores <- expand.grid(1:3, 1:3, 1:3)\npot_values <- c(0, 0, table(rowSums(pot_scores)))\ncache <- list()\n\naddScore2 <- function(p1, p2, s1 = 0, s2 = 0, turn = 1, cnt = 1) {\n  cache_name <- paste(p1, p2, s1, s2, turn)\n  if (cache_name %in% names(cache)) {\n    cache[[cache_name]] * cnt\n  } else {\n    rowSums(\n      sapply(9:3, \\(x) {\n        if (turn == 1) {\n          p1 <- (p1 + x) %% 10; if (p1 == 0) p1 <- 10; s1 <- s1 + p1\n        } else {\n          p2 <- (p2 + x) %% 10; if (p2 == 0) p2 <- 10; s2 <- s2 + p2\n        }\n\n        if (s1 >= 21 || s2 >= 21) {\n          cnt * pot_values[[x]] * as.numeric(turn == c(1, 2))\n        } else  {\n          value <- addScore2(p1, p2, s1, s2, 3 - turn, cnt * pot_values[[x]])\n          cache_name <- paste(p1, p2, s1, s2, 3 - turn)\n          if (!cache_name %in% names(cache)) {\n            cache[[cache_name]] <<- value / cnt / pot_values[[x]]\n          }\n          value\n        }\n      })\n    )\n  }\n}\n\naddScore2(8, 2)\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}