{
  "hash": "26fe2f6247a93830a09a4e229aff4f06",
  "result": {
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    code-tools: true\n    code-block-bg: true\n    code-block-border-left: \"#AB63BD\"\n---\n\n\n## Set-Up\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncommands <- readLines(\"input.txt\")\n```\n:::\n\n\n## Part 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsub_commands <- commands\nmatching_regex <- \"\\\\(\\\\)|\\\\[\\\\]|\\\\{\\\\}|<>\"\n\nwhile (any(grepl(matching_regex, sub_commands))) {\n  sub_commands <- gsub(matching_regex, \"\", sub_commands)\n}\n\n# First invalid closing bracket\ninvalid_commands <- substr(gsub(\"\\\\(|\\\\[|\\\\{|<\", \"\", sub_commands), 1, 1)\ninvalid_commands <- invalid_commands[invalid_commands != \"\"]\n\nerror_sizes <- c(\")\" = 3, \"]\" = 57, \"}\" = 1197, \">\" = 25137)\nsum(table(invalid_commands) * error_sizes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 392367\n```\n:::\n:::\n\n\n## Part 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nincomplete_values <- c(\"(\", \"[\", \"{\", \"<\")\nincomplete_commands <- grep(\"\\\\)|\\\\}|\\\\]|>\", sub_commands, value = TRUE, invert = TRUE)\n\nincomplete_scores <- sapply(strsplit(incomplete_commands, \"\"), \\(x) {\n  scores <- rev(match(x, incomplete_values))\n  y <- 0\n  for (i in seq_along(scores)) y <- 5 * y + scores[i]\n  y\n})\nmedian(incomplete_scores)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2192104158\n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}