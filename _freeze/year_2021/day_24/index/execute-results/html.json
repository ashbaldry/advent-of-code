{
  "hash": "f0a3b84745c29ce449cb1f1a13c516dd",
  "result": {
    "markdown": "---\ntitle: \"2021 - Day 24\"\nformat:\n  html:\n    code-fold: show\n    code-tools: true\n    code-block-bg: true\n    code-block-border-left: \"#AB63BD\"\n---\n\n\n## Set-Up\n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(scipen = 20)\ncomms <- read.delim(\n  \"input.txt\", sep = \" \", header = FALSE,\n  col.names = c(\"com\", \"var\", \"val\")\n)\nstr(comms)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t65 obs. of  3 variables:\n $ com: chr  \"inp\" \"ass\" \"add\" \"inp\" ...\n $ var: chr  \"w\" \"x\" \"z\" \"w\" ...\n $ val: chr  \"\" \"1\" \"(w+15)\" \"\" ...\n```\n:::\n\n```{.r .cell-code}\ncomms$call <- NA_character_\ncomms[comms$com == \"inp\", \"call\"] <- paste(comms$var[comms$com == \"inp\"], \"<- w_vals\")\ncomms$input[comms$com == \"inp\"] <- seq_along(comms$var[comms$com == \"inp\"])\ncomms[comms$com == \"mul\", \"call\"] <- paste(\n  comms$var[comms$com == \"mul\"], \"<-\",\n  comms$var[comms$com == \"mul\"], \"*\", comms$val[comms$com == \"mul\"]\n)\ncomms[comms$com == \"mul\" & comms$val == \"0\", \"call\"] <- paste(\n  comms$var[comms$com == \"mul\" & comms$val == \"0\"], \"<- 0\"\n)\ncomms[comms$com == \"add\", \"call\"] <- paste(\n  comms$var[comms$com == \"add\"], \"<-\",\n  comms$var[comms$com == \"add\"], \"+\", comms$val[comms$com == \"add\"]\n)\ncomms[comms$com == \"ass\", \"call\"] <- paste(\n  comms$var[comms$com == \"ass\"], \"<-\", comms$val[comms$com == \"ass\"]\n)\ncomms[comms$com == \"div\", \"call\"] <- paste(\n  comms$var[comms$com == \"div\"], \"<-\",\n  comms$var[comms$com == \"div\"], \"%/%\", comms$val[comms$com == \"div\"]\n)\ncomms[comms$com == \"mod\", \"call\"] <- paste(\n  comms$var[comms$com == \"mod\"], \"<-\",\n  comms$var[comms$com == \"mod\"], \"%%\", comms$val[comms$com == \"div\"]\n)\ncomms[comms$com == \"neql\", \"call\"] <- paste(\n  comms$var[comms$com == \"neql\"], \"<- as.numeric(\",\n  comms$var[comms$com == \"neql\"], \"!=\", comms$val[comms$com == \"neql\"],\n  \")\"\n)\n```\n:::\n\n\n## Part 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nw <- x <- z <- 0\nw_vals <- vals <- 9:1\n\nfor (i in seq(nrow(comms))) {\n  eval(parse(text = paste(comms$call[i])))\n  if (comms$com[i] == \"inp\" && i != 1) {\n    vals <- vals[!duplicated(z)]\n    z <- z[!duplicated(z)]\n\n    vals <- c(t(outer(vals, w_vals, paste0)))\n    z <- rep(z, each = 9)\n    w <- rep(w_vals, times = length(z) / 9)\n  }\n}\nvals[z == 0][1]\n```\n:::\n\n\n## Part 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nw <- x <- z <- 0\nw_vals <- vals <- 1:9\n\nfor (i in seq(nrow(comms))) {\n  eval(parse(text = paste(comms$call[i])))\n  if (comms$com[i] == \"inp\" && i != 1) {\n    vals <- vals[!duplicated(z)]\n    z <- z[!duplicated(z)]\n    cat(i, length(z), \"\\n\")\n\n    vals <- c(outer(vals, w_vals, paste0))\n    z <- rep(z, times = 9)\n    w <- rep(w_vals, each = length(z) / 9)\n  }\n}\nvals[z == 0][1]\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}