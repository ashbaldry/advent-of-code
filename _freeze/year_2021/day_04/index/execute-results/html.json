{
  "hash": "3001705cef5f955f0d31eb18b31d5f58",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"2021 - Day 4\"\nformat:\n  html:\n    code-fold: show\n    code-tools: true\n    code-block-bg: true\n    code-block-border-left: \"#AB63BD\"\n---\n\n\n\n\n\n## Set-Up\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbingo_calls <- readLines(\"calls.txt\")\nbingo_calls <- as.numeric(strsplit(bingo_calls, \",\")[[1]])\n\nstr(bingo_calls)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n num [1:100] 37 60 87 13 34 72 45 49 61 27 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nbingo_input <- readLines(\"input.txt\")\nbingo_input <- bingo_input[bingo_input != \"\"]\n\nstr(bingo_input)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n chr [1:500] \"66 78  7 45 92\" \"39 38 62 81 77\" \" 9 73 25 97 99\" ...\n```\n\n\n:::\n\n```{.r .cell-code}\nbingo_boards <- sapply(split(bingo_input, (seq_along(bingo_input) - 1) %/% 5), \\(x) {\n  do.call(rbind, lapply(strsplit(trimws(x), \" +\"), as.numeric))\n})\nbingo_boards <- array(bingo_boards, dim = c(5, 5, 100))\n```\n:::\n\n\n\n\n\n## Part 1\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfindBingoWinner <- function(bingo_boards, bingo_calls, \n                            bingo_match = array(FALSE, dim = dim(bingo_boards)), i = 1) {\n  bingo_match <- bingo_match | bingo_boards == bingo_calls[i]\n\n  full_column <- which(apply(apply(bingo_match, 2, colSums), 1, \\(x) any(x == 5)))\n  full_row <- which(apply(apply(bingo_match, 1, colSums), 1, \\(x) any(x == 5)))\n  if (length(full_column) > 0 | length(full_row) > 0) {\n    index <- unique(c(full_column, full_row))\n    list(board = bingo_boards[, , index], calls = bingo_match[, , index], last_call = bingo_calls[i])\n  } else {\n    findBingoWinner(bingo_boards, bingo_calls, bingo_match, i = i + 1)\n  }\n}\n\nwinning_board <- findBingoWinner(bingo_boards, bingo_calls)\nsum(winning_board$board[!winning_board$calls]) * winning_board$last_call\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 34506\n```\n\n\n:::\n:::\n\n\n\n\n\n## Part 2\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfindBingoLoser <- function(bingo_boards, bingo_calls, \n                           bingo_match = array(FALSE, dim = dim(bingo_boards)), i = 1) {\n  bingo_match_input <- bingo_match\n  bingo_match <- bingo_match | bingo_boards == bingo_calls[i]\n\n  full_column <- sum(apply(apply(bingo_match, 2, colSums), 1, \\(x) any(x == 5)))\n  full_row <- sum(apply(apply(bingo_match, 1, colSums), 1, \\(x) any(x == 5)))\n\n  if (full_column == 100) {\n    index <- which(apply(apply(bingo_match_input, 2, colSums), 1, \\(x) all(x != 5)))\n    list(board = bingo_boards[, , index], calls = bingo_match[, , index], last_call = bingo_calls[i])\n  } else if (full_row == 100) {\n    index <- which(apply(apply(bingo_match_input, 1, colSums), 1, \\(x) all(x != 5)))\n    list(board = bingo_boards[, , index], calls = bingo_match[, , index], last_call = bingo_calls[i])\n  } else {\n    findBingoLoser(bingo_boards, bingo_calls, bingo_match, i = i + 1)\n  }\n}\n\nlosing_board <- findBingoLoser(bingo_boards, bingo_calls)\nsum(losing_board$board[!losing_board$calls]) * losing_board$last_call\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 7686\n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}