{
  "hash": "2ee8493c2937f2467c1b5438a33212bb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"2021 - Day 16\"\nformat:\n  html:\n    code-fold: show\n    code-tools: true\n    code-block-bg: true\n    code-block-border-left: \"#AB63BD\"\n---\n\n\n\n\n\n## Set-Up\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntransmission <- strsplit(readLines(\"input.txt\"), \"\")[[1]]\nstr(transmission)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n chr [1:1344] \"C\" \"2\" \"0\" \"D\" \"7\" \"9\" \"0\" \"0\" \"A\" \"0\" \"1\" \"2\" \"F\" \"B\" \"9\" ...\n```\n\n\n:::\n\n```{.r .cell-code}\ntransmission_bin <- strtoi(transmission, base = 16L)\nclass(transmission_bin) <- \"binmode\"\ntransmission_bin <- paste(as.character(transmission_bin), collapse = \"\")\n```\n:::\n\n\n\n\n\n### Helper Functions\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbinaryNumber <- function(number) {\n  x <- as.numeric(strsplit(number, \"\")[[1]])\n  sum(x * 2 ^ (seq(length(x) - 1, 0)))\n}\n\nfindPackets <- function(transmission_bin, type_1_run = 0, type_1_max = 1) {\n  version <- strtoi(substr(transmission_bin, 1, 3), 2L)\n  type_id <- strtoi(substr(transmission_bin, 4, 6), 2L)\n\n  if (isTRUE(type_id == 4)) {\n    i <- 7\n    number <- substr(transmission_bin, i + 1, i + 4)\n    while (substr(transmission_bin, i, i) == \"1\") {\n      i <- i + 5\n      number <- paste0(number, substr(transmission_bin, i + 1, i + 4))\n    }\n    i <- i + 5\n    number <- binaryNumber(number)\n    subpackages <- NULL\n  } else {\n    type_id_length <- substr(transmission_bin, 7, 7)\n\n    if (type_id_length == \"0\") {\n      length_subpackages <- strtoi(substr(transmission_bin, 8, 22), 2L)\n      subpackages <- findPackets(substr(transmission_bin, 23, 22 + length_subpackages))\n      i <- 23 + length_subpackages\n    } else {\n      n_subpackages <- strtoi(substr(transmission_bin, 8, 18), 2L)\n      subpackages <- findPackets(substr(transmission_bin, 19, nchar(transmission_bin)), 1, n_subpackages)\n      i <- nchar(transmission_bin) - subpackages[[n_subpackages]]$nchar + 1\n    }\n    number <- NULL\n  }\n\n  packet <- list(version = version, type = type_id, value = number, subpackages = subpackages)\n\n  remaining_transmission <- substr(transmission_bin, i, nchar(transmission_bin))\n  if (type_1_run == type_1_max) packet$nchar <- nchar(remaining_transmission)\n\n  if (length(remaining_transmission) > 0 && grepl(\"1\", remaining_transmission) && type_1_run != type_1_max) {\n    if (type_1_run > 0) type_1_run <- type_1_run + 1\n    c(list(packet), findPackets(remaining_transmission, type_1_run, type_1_max))\n  } else {\n    list(packet)\n  }\n}\n```\n:::\n\n\n\n\n\n## Part 1\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npackets <- findPackets(transmission_bin)[[1]]\npackets_unlisted <- unlist(packets)\nsum(packets_unlisted[grepl(\"version\", names(packets_unlisted))])\n```\n:::\n\n\n\n\n\n## Part 2\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfindPacketSum <- function(packet) {\n  if (packet$type == 0) {\n    sum(sapply(packet$subpackages, findPacketSum))\n  } else if (packet$type == 1) {\n    prod(sapply(packet$subpackages, findPacketSum))\n  } else if (packet$type == 2) {\n    min(sapply(packet$subpackages, findPacketSum))\n  } else if (packet$type == 3) {\n    max(sapply(packet$subpackages, findPacketSum))\n  } else if (packet$type == 4) {\n    packet$value\n  } else if (packet$type == 5) {\n    as.numeric(findPacketSum(packet$subpackages[[1]]) > findPacketSum(packet$subpackages[[2]]))\n  } else if (packet$type == 6) {\n    as.numeric(findPacketSum(packet$subpackages[[1]]) < findPacketSum(packet$subpackages[[2]]))\n  } else if (packet$type == 7) {\n    as.numeric(findPacketSum(packet$subpackages[[1]]) == findPacketSum(packet$subpackages[[2]]))\n  }\n}\nfindPacketSum(packets)\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}