{
  "hash": "b07805562ab6f6965ca9ec7455d9833f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"2021 - Day 8\"\nformat:\n  html:\n    code-fold: show\n    code-tools: true\n    code-block-bg: true\n    code-block-border-left: \"#AB63BD\"\n---\n\n\n\n\n\n## Set-Up\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncol_names <- c(paste0(\"P\", 1:10), \"SEP\", paste0(\"I\", 1:4))\nnumbers <- read.delim(\"input.txt\", sep = \" \", header = FALSE, col.names = col_names)\nstr(numbers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t200 obs. of  15 variables:\n $ P1 : chr  \"afebd\" \"eabcdg\" \"fbeadcg\" \"adgcbe\" ...\n $ P2 : chr  \"ecdgfb\" \"fc\" \"fdcge\" \"bgaef\" ...\n $ P3 : chr  \"gacfed\" \"fbce\" \"deb\" \"cab\" ...\n $ P4 : chr  \"dgaeb\" \"dbfagc\" \"gcdeaf\" \"gbfadec\" ...\n $ P5 : chr  \"bf\" \"cagbdfe\" \"fdgb\" \"deacg\" ...\n $ P6 : chr  \"acefd\" \"cbdge\" \"bd\" \"bdcg\" ...\n $ P7 : chr  \"fgdabec\" \"fgc\" \"bedacg\" \"cfegad\" ...\n $ P8 : chr  \"bfd\" \"gfade\" \"cedbf\" \"gbcea\" ...\n $ P9 : chr  \"bedcaf\" \"ecdgfb\" \"feabc\" \"fbeadc\" ...\n $ P10: chr  \"bafc\" \"gfedc\" \"fcgdeb\" \"cb\" ...\n $ SEP: chr  \"|\" \"|\" \"|\" \"|\" ...\n $ I1 : chr  \"afcbed\" \"cf\" \"dbcfeg\" \"bgcd\" ...\n $ I2 : chr  \"fb\" \"fgbacd\" \"cbeagd\" \"gdcb\" ...\n $ I3 : chr  \"bfd\" \"fecb\" \"ebd\" \"acb\" ...\n $ I4 : chr  \"bdf\" \"becdg\" \"db\" \"gabced\" ...\n```\n\n\n:::\n:::\n\n\n\n\n\n## Part 1\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(sapply(numbers[, paste0(\"I\", 1:4)], nchar) %in% c(2, 3, 4, 7))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 554\n```\n\n\n:::\n:::\n\n\n\n\n\n## Part 2\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetNumberOrder <- function(x) {\n  y <- setNames(character(10), paste0(\"N\", 0:9))\n  x <- x[order(nchar(x), x)]\n  # 1, 4, 7, 8\n  y[c(2, 8, 5, 9)] <- x[c(1, 2, 3, 10)]\n  # 2\n  y[3] <- x[4:6][sapply(strsplit(x[4:6], \"\"), \\(y) sum(y %in% strsplit(x[3], \"\")[[1]]) == 2)]\n  # 3\n  y[4] <- x[4:6][sapply(strsplit(x[4:6], \"\"), \\(y) all(strsplit(x[1], \"\")[[1]] %in% y))]\n  # 5\n  y[6] <- setdiff(x[4:6], y[3:4])\n  # 6\n  y[7] <- x[7:9][sapply(strsplit(x[7:9], \"\"), \\(y) !all(strsplit(x[2], \"\")[[1]] %in% y))]\n  # 9\n  y[10] <- x[7:9][sapply(strsplit(x[7:9], \"\"), \\(y) all(strsplit(x[3], \"\")[[1]] %in% y))]\n  # 0\n  y[1] <- setdiff(x[7:9], y[c(7, 10)])\n  y\n}\n\ngetNumber <- function(x) {\n  y <- match(x[paste0(\"I\", 1:4)], x[paste0(\"N\", 0:9)]) - 1\n  as.numeric(paste(y, collapse = \"\"))\n}\n\nnumbers <- sapply(numbers, \\(x) sapply(lapply(strsplit(x, \"\"), sort), paste0, collapse = \"\"))\nsorted_numbers <- t(apply(numbers[, paste0(\"P\", 1:10)], 1, getNumberOrder))\nnumbers <- cbind(numbers, sorted_numbers)\nsum(apply(numbers, 1, getNumber))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 990964\n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}